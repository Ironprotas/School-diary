// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: EvanuationsP.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Evaluations {
  public static partial class EvaluationsService
  {
    static readonly string __ServiceName = "evaluations.EvaluationsService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Evaluations.SendEvaluationRequest> __Marshaller_evaluations_SendEvaluationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Evaluations.SendEvaluationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Evaluations.GetEvaluationsUserOneObjectRequest> __Marshaller_evaluations_GetEvaluationsUserOneObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Evaluations.GetEvaluationsUserOneObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Evaluations.GetEvaluationsUserOneObjectResponse> __Marshaller_evaluations_GetEvaluationsUserOneObjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Evaluations.GetEvaluationsUserOneObjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Evaluations.GetAllEvaluationsOneUserRequest> __Marshaller_evaluations_GetAllEvaluationsOneUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Evaluations.GetAllEvaluationsOneUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Evaluations.GetAllEvaluationsOneUserResponse> __Marshaller_evaluations_GetAllEvaluationsOneUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Evaluations.GetAllEvaluationsOneUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Evaluations.GetAllEvaluationsMyStudentRequest> __Marshaller_evaluations_GetAllEvaluationsMyStudentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Evaluations.GetAllEvaluationsMyStudentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Evaluations.GetAllEvaluationsMyStudentResponse> __Marshaller_evaluations_GetAllEvaluationsMyStudentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Evaluations.GetAllEvaluationsMyStudentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Evaluations.GetAllEvaluationsClassRequest> __Marshaller_evaluations_GetAllEvaluationsClassRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Evaluations.GetAllEvaluationsClassRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Evaluations.GetAllEvaluationsClassResponse> __Marshaller_evaluations_GetAllEvaluationsClassResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Evaluations.GetAllEvaluationsClassResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Evaluations.SendEvaluationRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SendEvaluation = new grpc::Method<global::Evaluations.SendEvaluationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendEvaluation",
        __Marshaller_evaluations_SendEvaluationRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Evaluations.GetEvaluationsUserOneObjectRequest, global::Evaluations.GetEvaluationsUserOneObjectResponse> __Method_GetEvaluationsUserOneObject = new grpc::Method<global::Evaluations.GetEvaluationsUserOneObjectRequest, global::Evaluations.GetEvaluationsUserOneObjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEvaluationsUserOneObject",
        __Marshaller_evaluations_GetEvaluationsUserOneObjectRequest,
        __Marshaller_evaluations_GetEvaluationsUserOneObjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Evaluations.GetAllEvaluationsOneUserRequest, global::Evaluations.GetAllEvaluationsOneUserResponse> __Method_GetAllEvaluationsOneUser = new grpc::Method<global::Evaluations.GetAllEvaluationsOneUserRequest, global::Evaluations.GetAllEvaluationsOneUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllEvaluationsOneUser",
        __Marshaller_evaluations_GetAllEvaluationsOneUserRequest,
        __Marshaller_evaluations_GetAllEvaluationsOneUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Evaluations.GetAllEvaluationsMyStudentRequest, global::Evaluations.GetAllEvaluationsMyStudentResponse> __Method_GetAllEvaluationsMyStudent = new grpc::Method<global::Evaluations.GetAllEvaluationsMyStudentRequest, global::Evaluations.GetAllEvaluationsMyStudentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllEvaluationsMyStudent",
        __Marshaller_evaluations_GetAllEvaluationsMyStudentRequest,
        __Marshaller_evaluations_GetAllEvaluationsMyStudentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Evaluations.GetAllEvaluationsClassRequest, global::Evaluations.GetAllEvaluationsClassResponse> __Method_GetAllEvaluationsClass = new grpc::Method<global::Evaluations.GetAllEvaluationsClassRequest, global::Evaluations.GetAllEvaluationsClassResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllEvaluationsClass",
        __Marshaller_evaluations_GetAllEvaluationsClassRequest,
        __Marshaller_evaluations_GetAllEvaluationsClassResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Evaluations.EvanuationsPReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EvaluationsService</summary>
    [grpc::BindServiceMethod(typeof(EvaluationsService), "BindService")]
    public abstract partial class EvaluationsServiceBase
    {
      /// <summary>
      /// Добавление оценки ученику
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SendEvaluation(global::Evaluations.SendEvaluationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Получение оценок пользователя по одному предмету
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Evaluations.GetEvaluationsUserOneObjectResponse> GetEvaluationsUserOneObject(global::Evaluations.GetEvaluationsUserOneObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Получение всех оценок по всем предметам одного пользователя
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Evaluations.GetAllEvaluationsOneUserResponse> GetAllEvaluationsOneUser(global::Evaluations.GetAllEvaluationsOneUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Получение оценок своего ребенка
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Evaluations.GetAllEvaluationsMyStudentResponse> GetAllEvaluationsMyStudent(global::Evaluations.GetAllEvaluationsMyStudentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Получение всех оценок по классу
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Evaluations.GetAllEvaluationsClassResponse> GetAllEvaluationsClass(global::Evaluations.GetAllEvaluationsClassRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for EvaluationsService</summary>
    public partial class EvaluationsServiceClient : grpc::ClientBase<EvaluationsServiceClient>
    {
      /// <summary>Creates a new client for EvaluationsService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EvaluationsServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EvaluationsService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EvaluationsServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EvaluationsServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EvaluationsServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Добавление оценки ученику
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendEvaluation(global::Evaluations.SendEvaluationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendEvaluation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Добавление оценки ученику
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SendEvaluation(global::Evaluations.SendEvaluationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendEvaluation, null, options, request);
      }
      /// <summary>
      /// Добавление оценки ученику
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendEvaluationAsync(global::Evaluations.SendEvaluationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendEvaluationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Добавление оценки ученику
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SendEvaluationAsync(global::Evaluations.SendEvaluationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendEvaluation, null, options, request);
      }
      /// <summary>
      /// Получение оценок пользователя по одному предмету
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Evaluations.GetEvaluationsUserOneObjectResponse GetEvaluationsUserOneObject(global::Evaluations.GetEvaluationsUserOneObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvaluationsUserOneObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Получение оценок пользователя по одному предмету
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Evaluations.GetEvaluationsUserOneObjectResponse GetEvaluationsUserOneObject(global::Evaluations.GetEvaluationsUserOneObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEvaluationsUserOneObject, null, options, request);
      }
      /// <summary>
      /// Получение оценок пользователя по одному предмету
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Evaluations.GetEvaluationsUserOneObjectResponse> GetEvaluationsUserOneObjectAsync(global::Evaluations.GetEvaluationsUserOneObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvaluationsUserOneObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Получение оценок пользователя по одному предмету
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Evaluations.GetEvaluationsUserOneObjectResponse> GetEvaluationsUserOneObjectAsync(global::Evaluations.GetEvaluationsUserOneObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEvaluationsUserOneObject, null, options, request);
      }
      /// <summary>
      /// Получение всех оценок по всем предметам одного пользователя
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Evaluations.GetAllEvaluationsOneUserResponse GetAllEvaluationsOneUser(global::Evaluations.GetAllEvaluationsOneUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllEvaluationsOneUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Получение всех оценок по всем предметам одного пользователя
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Evaluations.GetAllEvaluationsOneUserResponse GetAllEvaluationsOneUser(global::Evaluations.GetAllEvaluationsOneUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllEvaluationsOneUser, null, options, request);
      }
      /// <summary>
      /// Получение всех оценок по всем предметам одного пользователя
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Evaluations.GetAllEvaluationsOneUserResponse> GetAllEvaluationsOneUserAsync(global::Evaluations.GetAllEvaluationsOneUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllEvaluationsOneUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Получение всех оценок по всем предметам одного пользователя
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Evaluations.GetAllEvaluationsOneUserResponse> GetAllEvaluationsOneUserAsync(global::Evaluations.GetAllEvaluationsOneUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllEvaluationsOneUser, null, options, request);
      }
      /// <summary>
      /// Получение оценок своего ребенка
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Evaluations.GetAllEvaluationsMyStudentResponse GetAllEvaluationsMyStudent(global::Evaluations.GetAllEvaluationsMyStudentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllEvaluationsMyStudent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Получение оценок своего ребенка
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Evaluations.GetAllEvaluationsMyStudentResponse GetAllEvaluationsMyStudent(global::Evaluations.GetAllEvaluationsMyStudentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllEvaluationsMyStudent, null, options, request);
      }
      /// <summary>
      /// Получение оценок своего ребенка
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Evaluations.GetAllEvaluationsMyStudentResponse> GetAllEvaluationsMyStudentAsync(global::Evaluations.GetAllEvaluationsMyStudentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllEvaluationsMyStudentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Получение оценок своего ребенка
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Evaluations.GetAllEvaluationsMyStudentResponse> GetAllEvaluationsMyStudentAsync(global::Evaluations.GetAllEvaluationsMyStudentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllEvaluationsMyStudent, null, options, request);
      }
      /// <summary>
      /// Получение всех оценок по классу
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Evaluations.GetAllEvaluationsClassResponse GetAllEvaluationsClass(global::Evaluations.GetAllEvaluationsClassRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllEvaluationsClass(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Получение всех оценок по классу
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Evaluations.GetAllEvaluationsClassResponse GetAllEvaluationsClass(global::Evaluations.GetAllEvaluationsClassRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllEvaluationsClass, null, options, request);
      }
      /// <summary>
      /// Получение всех оценок по классу
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Evaluations.GetAllEvaluationsClassResponse> GetAllEvaluationsClassAsync(global::Evaluations.GetAllEvaluationsClassRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllEvaluationsClassAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Получение всех оценок по классу
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Evaluations.GetAllEvaluationsClassResponse> GetAllEvaluationsClassAsync(global::Evaluations.GetAllEvaluationsClassRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllEvaluationsClass, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override EvaluationsServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EvaluationsServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(EvaluationsServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SendEvaluation, serviceImpl.SendEvaluation)
          .AddMethod(__Method_GetEvaluationsUserOneObject, serviceImpl.GetEvaluationsUserOneObject)
          .AddMethod(__Method_GetAllEvaluationsOneUser, serviceImpl.GetAllEvaluationsOneUser)
          .AddMethod(__Method_GetAllEvaluationsMyStudent, serviceImpl.GetAllEvaluationsMyStudent)
          .AddMethod(__Method_GetAllEvaluationsClass, serviceImpl.GetAllEvaluationsClass).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EvaluationsServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SendEvaluation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Evaluations.SendEvaluationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SendEvaluation));
      serviceBinder.AddMethod(__Method_GetEvaluationsUserOneObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Evaluations.GetEvaluationsUserOneObjectRequest, global::Evaluations.GetEvaluationsUserOneObjectResponse>(serviceImpl.GetEvaluationsUserOneObject));
      serviceBinder.AddMethod(__Method_GetAllEvaluationsOneUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Evaluations.GetAllEvaluationsOneUserRequest, global::Evaluations.GetAllEvaluationsOneUserResponse>(serviceImpl.GetAllEvaluationsOneUser));
      serviceBinder.AddMethod(__Method_GetAllEvaluationsMyStudent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Evaluations.GetAllEvaluationsMyStudentRequest, global::Evaluations.GetAllEvaluationsMyStudentResponse>(serviceImpl.GetAllEvaluationsMyStudent));
      serviceBinder.AddMethod(__Method_GetAllEvaluationsClass, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Evaluations.GetAllEvaluationsClassRequest, global::Evaluations.GetAllEvaluationsClassResponse>(serviceImpl.GetAllEvaluationsClass));
    }

  }
}
#endregion
